  - name: disable the nodejs module
    ansible.builtin.command: dnf module disable nodejs -y
  - name: enable the nodejs
    ansible.builtin.command: dnf module enable nodejs:20 -y
     #- name: install nodejs
     #  ansible.builtin.command: dnf install nodejs -y
     #- name: create the user expense 
     # ansible.builtin.command: useradd expense
  - name: install the nodejs
    ansible.builtin.package: #works for all distros
     name: nodejs
     state: installed
  - name: create the user expense
    ansible.builtin.user:   #works for all distros
     name: expense
  - name: run app pre_requisites
    ansible.builtin.import_role:
     name: common
     tasks_from: app_pre_requisites  
  - name: install the npm 
    ansible.builtin.command: npm install 
    args:
     chdir: /app 
  - name: copy the backend service 
    ansible.builtin.template:
     src: backend.service.j2
     dest: /etc/systemd/system/backend.service
  - name: install mysql service 
    ansible.builtin.package:
     name: mysql-server
     state: installed
  - name: install python mysql dependencies
  #install the python mysql dependancies
    ansible.builtin.pip: 
      name:
      - PyMySQL # to connect MySQL DB from Ansible
      - cryptography
      executable: pip3.9 # pip3.11 if python version is 3.11   
  - name: import data into mysql  
    community.mysql.mysql_db:    
     login_user: "{{login_user}}"
     login_password: "{{ login_password }}"
     login_host: "{{ login_host }}"   
     target: /app/schema/backend.sql
     state: import
     name: all          
  - name: to restart the daemon-reload
    ansible.builtin.systemd_service:
     daemon_reload: true   
  - name: to start and enable the service 
    ansible.builtin.service:
     name: backend 
     state: started 
     enabled: yes 